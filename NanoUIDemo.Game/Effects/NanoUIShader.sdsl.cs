// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Stride Shader Mixin Code Generator.
// To generate it yourself, please install Stride.VisualStudio.Package .vsix
// and re-save the associated .sdfx.
// </auto-generated>

using System;
using Stride.Core;
using Stride.Rendering;
using Stride.Graphics;
using Stride.Shaders;
using Stride.Core.Mathematics;
using Buffer = Stride.Graphics.Buffer;

namespace Stride.Rendering
{
    public static partial class NanoUIShaderKeys
    {
        public static readonly ValueParameterKey<Matrix> proj = ParameterKeys.NewValue<Matrix>();
        public static readonly ObjectParameterKey<Texture> tex = ParameterKeys.NewObject<Texture>();
        public static readonly ObjectParameterKey<SamplerState> TexSampler = ParameterKeys.NewObject<SamplerState>();
        public static readonly ValueParameterKey<Matrix> scissorMat = ParameterKeys.NewValue<Matrix>();
        public static readonly ValueParameterKey<Matrix> paintMat = ParameterKeys.NewValue<Matrix>();
        public static readonly ValueParameterKey<Vector4> innerCol = ParameterKeys.NewValue<Vector4>();
        public static readonly ValueParameterKey<Vector4> outerCol = ParameterKeys.NewValue<Vector4>();
        public static readonly ValueParameterKey<Vector2> scissorExt = ParameterKeys.NewValue<Vector2>();
        public static readonly ValueParameterKey<Vector2> scissorScale = ParameterKeys.NewValue<Vector2>();
        public static readonly ValueParameterKey<Vector2> extent = ParameterKeys.NewValue<Vector2>();
        public static readonly ValueParameterKey<float> radius = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> feather = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> actionType = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> fontSize = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> unused1 = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> unused2 = ParameterKeys.NewValue<float>();
    }
}
